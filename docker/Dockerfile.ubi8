ARG GOLANG_VERSION
FROM golang:$GOLANG_VERSION AS builder
WORKDIR /go/src/github.com/NVIDIA/gpu-monitoring-tools

COPY . .

RUN make binary check-format

FROM nvcr.io/nvidia/cuda:11.2.1-base-ubi8
LABEL io.k8s.display-name="NVIDIA DCGM Exporter"

ARG DCGM_VERSION
RUN yum install -y wget libgomp && \
    wget --no-check-certificate https://developer.download.nvidia.com/compute/redist/dcgm/${DCGM_VERSION}/RPMS/x86_64/datacenter-gpu-manager-${DCGM_VERSION}-1-x86_64.rpm && \
    rpm -i ./datacenter-gpu-manager-*.rpm && \
    rm ./datacenter-gpu-manager-*.rpm

COPY --from=builder /go/src/github.com/NVIDIA/gpu-monitoring-tools/pkg/dcgm-exporter /usr/bin/
COPY etc/dcgm-exporter /etc/dcgm-exporter

ENV NVIDIA_VISIBLE_DEVICES=all
# disable all constraints on the configurations required by NVIDIA container toolkit
ENV NVIDIA_DISABLE_REQUIRE="true"
# Required for DCP metrics
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility,compat32

ARG VERSION

LABEL io.k8s.display-name="NVIDIA DCGM Eporter"
LABEL name="NVIDIA DCGM Exporter"
LABEL vendor="NVIDIA"
LABEL version="${VERSION}"
LABEL release="N/A"
LABEL summary="Exports GPU Metrics to Prometheus"
LABEL description="See summary"

COPY ./LICENSE ./licenses/LICENSE

ENV NO_SETCAP=
COPY docker/dcgm-exporter-entrypoint.sh /usr/local/dcgm/dcgm-exporter-entrypoint.sh
RUN chmod +x /usr/local/dcgm/dcgm-exporter-entrypoint.sh

ENTRYPOINT ["/usr/local/dcgm/dcgm-exporter-entrypoint.sh"]
