version: 2.1
commands:
  pre_docker_commands:
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: "Docker login"
          command: cat my.json | docker login -u _json_key --password-stdin https://gcr.io

  install_project_dependencies:
    steps:
      - run:
          name: "Install project dependencies"
          command: |
            go get -v -t ./...

  test_installkit:
    steps:
      - run:
          name: "Test installkit"
          command: |
            printf "Triggering an installkit build on $CIRCLE_BRANCH branch\n\n"

            curl -X POST --header “Content-Type: application/json” -d '{"branch": $CIRCLE_BRANCH}' \
                "https://circleci.com/api/v1.1/project/github/run-ai/installkit-customer/build?circle-token=$INSTALLKIT_TOKEN"

            printf "\n\nFollow the progress of the build on: https://circleci.com/gh/run-ai/installkit-customer/tree/$CIRCLE_BRANCH"

  update_version_in_installkit:
    steps:
      - run:
          name: Git Commands
          command: |
            TAG=${CIRCLE_TAG/v/''}
            echo "Updating gpu-metrics-exporter new version number $TAG in installkit..."
            cd ~
            git config --global user.name "circleci-runai"
            git config --global user.email "circleci@run.ai"
            git clone https://github.com/run-ai/installkit-customer.git
            cd installkit-customer/subcharts/dcgm-exporter
            sed -i "0,/^\([[:space:]]*tag: *\).*/s//\1$TAG/" values.yaml
            git add values.yaml
            git commit -m "updated dcgm-exporter production version to $TAG [skip ci]"
            git push
jobs:
  build_and_test:
    docker:
      - image: circleci/golang:1.13
    resource_class: large # implements a machine with 4 vCPUS and 8gb of ram.
    working_directory: /go/src/github.com/run-ai/runai-scheduler
    steps:
      - checkout
      - install_project_dependencies
  deploy-staging:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: "Extract gcloud private key to file"
          command: echo "$STAGING_GCLOUD_SERVICE_JSON_CONTENT" | base64 -d > ./my.json

      - pre_docker_commands

      - run:
          name: "Docker build and push"
          command: |
            TAG=latest
            docker build \
            	--build-arg "GOLANG_VERSION=1.14.2" \
            	--build-arg "DCGM_VERSION=2.0.13" \
            	--tag "gcr.io/run-ai-staging/dcgm-exporter:$TAG" \
            	--file docker/Dockerfile.ubi8 .
            docker push gcr.io/run-ai-staging/dcgm-exporter:$TAG

      - test_installkit

  deploy-production:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: "Extract gcloud private key to file"
          command: echo "$PRODUCTION_GCLOUD_SERVICE_JSON_CONTENT" | base64 -d > ./my.json

      - pre_docker_commands

      - run:
          name: "Docker build and push"
          command: |
            TAG=${CIRCLE_TAG/v/''}
            docker build \
            	--build-arg "GOLANG_VERSION=1.14.2" \
            	--build-arg "DCGM_VERSION=2.0.13" \
            	--tag "gcr.io/run-ai-prod/dcgm-exporter:$TAG" \
            	--file docker/Dockerfile.ubi8 .
            docker push gcr.io/run-ai-prod/dcgm-exporter:$TAG

      - update_version_in_installkit

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_and_test:
          filters:
            tags:
              only: /^v.*/
      - deploy-staging:
          requires:
            - build_and_test
          filters:
            branches:
              only:
              - master
              - ubi2
      - deploy-production:
          requires:
            - build_and_test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

